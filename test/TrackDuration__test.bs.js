// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var TestFramework = require("reason-test-framework/src/TestFramework.bs.js");
var TrackDuration = require("../src/TrackDuration.bs.js");

Curry._2(TestFramework.describe, "make", (function (param) {
        var test = param.test;
        Curry._2(test, "returns time with h:min:s", (function (param) {
                return Curry._1(Curry._1(param.expect.string, TrackDuration.parse(5000000)).toEqual, "1:23:19");
              }));
        Curry._2(test, "returns time with min:s", (function (param) {
                return Curry._1(Curry._1(param.expect.string, TrackDuration.parse(500000)).toEqual, "8:20");
              }));
        Curry._2(test, "returns time with 0:s", (function (param) {
                return Curry._1(Curry._1(param.expect.string, TrackDuration.parse(50000)).toEqual, "0:50");
              }));
        Curry._2(test, "returns when seconds are super close to 60", (function (param) {
                var expect = param.expect;
                Curry._1(Curry._1(expect.string, TrackDuration.parse(59900)).toEqual, "0:59");
                return Curry._1(Curry._1(expect.string, TrackDuration.parse(59999)).toEqual, "0:59");
              }));
        Curry._2(test, "returns when seconds are exactly 60", (function (param) {
                return Curry._1(Curry._1(param.expect.string, TrackDuration.parse(60000)).toEqual, "1:00");
              }));
        Curry._2(test, "returns when minutes are super close to 60", (function (param) {
                var expect = param.expect;
                Curry._1(Curry._1(expect.string, TrackDuration.parse(3599000)).toEqual, "59:59");
                return Curry._1(Curry._1(expect.string, TrackDuration.parse(3599999)).toEqual, "59:59");
              }));
        return Curry._2(test, "returns when minutes are exactly 60", (function (param) {
                      return Curry._1(Curry._1(param.expect.string, TrackDuration.parse(3600000)).toEqual, "1:00:00");
                    }));
      }));

/*  Not a pure module */
